import{c as e}from"./app.f0b58fb0.js";import{_ as a}from"./plugin-vue_export-helper.21dcd24c.js";const i={},d=e('<h1 id="style-guide" tabindex="-1"><a class="header-anchor" href="#style-guide" aria-hidden="true">#</a> Style Guide</h1><h2 id="methods-naming" tabindex="-1"><a class="header-anchor" href="#methods-naming" aria-hidden="true">#</a> Methods naming</h2><h3 id="no-namespace-way" tabindex="-1"><a class="header-anchor" href="#no-namespace-way" aria-hidden="true">#</a> No-namespace way</h3><ul><li>good option if you have few functions</li><li>looks familiar and natural</li></ul><h4 id="examples" tabindex="-1"><a class="header-anchor" href="#examples" aria-hidden="true">#</a> Examples</h4><ul><li><code>getUserById</code></li><li><code>createUser</code></li><li><code>updateUserEmail</code></li></ul><h3 id="with-namespace-way" tabindex="-1"><a class="header-anchor" href="#with-namespace-way" aria-hidden="true">#</a> With-namespace way</h3><ul><li>best option when there are many functions and resources</li><li>easy to create nested resources</li></ul><h4 id="examples-1" tabindex="-1"><a class="header-anchor" href="#examples-1" aria-hidden="true">#</a> Examples</h4><ul><li><code>users.getById</code></li><li><code>users.create</code></li><li><code>user.update</code></li><li><code>user.updatePreferences</code></li><li><code>menu.categories.create</code></li><li><code>menu.category.delete</code></li></ul>',10);function r(s,c){return d}var o=a(i,[["render",r]]);export{o as default};
