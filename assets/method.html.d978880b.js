import{r as e,o as p,a as t,b as n,e as o,w as c,F as l,d as s,c as r}from"./app.f0b58fb0.js";import{_ as i}from"./plugin-vue_export-helper.21dcd24c.js";const u={},k=n("h1",{id:"method",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#method","aria-hidden":"true"},"#"),s(" Method")],-1),d=n("h2",{id:"introduction",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#introduction","aria-hidden":"true"},"#"),s(" Introduction")],-1),b=n("code",null,"Method",-1),m=s(" is a "),h=n("code",null,"Type",-1),f=s(" pipe with parameters and additional handler for their processing."),y=n("li",null,"Result of method's handler will be used as the result of invocation.",-1),g=r(`<p><code>Method</code> example:</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token keyword">use</span> <span class="token package">Invoke<span class="token punctuation">\\</span>Method</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name-definition class-name">IsEven</span> <span class="token keyword">extends</span> <span class="token class-name">Method</span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword type-declaration">int</span> <span class="token variable">$x</span><span class="token punctuation">;</span>

    <span class="token keyword">protected</span> <span class="token keyword">function</span> <span class="token function-definition function">handle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword return-type">bool</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">x</span> <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">echo</span> <span class="token class-name static-context">IsEven</span><span class="token operator">::</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;x&quot;</span> <span class="token operator">=&gt;</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token string double-quoted-string">&quot;true&quot;</span> <span class="token punctuation">:</span> <span class="token string double-quoted-string">&quot;false&quot;</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h2 id="creating-methods" tabindex="-1"><a class="header-anchor" href="#creating-methods" aria-hidden="true">#</a> Creating methods</h2><h3 id="as-function" tabindex="-1"><a class="header-anchor" href="#as-function" aria-hidden="true">#</a> As function</h3><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token keyword">use</span> <span class="token package">Invoke<span class="token punctuation">\\</span>Invoke</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function-definition function">add</span><span class="token punctuation">(</span><span class="token keyword type-hint">int</span> <span class="token variable">$a</span><span class="token punctuation">,</span> <span class="token keyword type-hint">int</span> <span class="token variable">$b</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword return-type">int</span>
<span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token variable">$a</span> <span class="token operator">+</span> <span class="token variable">$b</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token class-name static-context">Invoke</span><span class="token operator">::</span><span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
    <span class="token string double-quoted-string">&quot;add&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token variable">$result</span> <span class="token operator">=</span> <span class="token class-name static-context">Invoke</span><span class="token operator">::</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;add&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>
    <span class="token string double-quoted-string">&quot;a&quot;</span> <span class="token operator">=&gt;</span> <span class="token number">1</span><span class="token punctuation">,</span>
    <span class="token string double-quoted-string">&quot;b&quot;</span> <span class="token operator">=&gt;</span> <span class="token number">2</span>
<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">echo</span> <span class="token variable">$result</span><span class="token punctuation">;</span> <span class="token comment">// 2</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><h3 id="as-class" tabindex="-1"><a class="header-anchor" href="#as-class" aria-hidden="true">#</a> As class</h3><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token keyword">use</span> <span class="token package">Invoke<span class="token punctuation">\\</span>Method</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">Invoke<span class="token punctuation">\\</span>Invoke</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name-definition class-name">GetPeopleNearby</span> <span class="token keyword">extends</span> <span class="token class-name">Method</span>
<span class="token punctuation">{</span>
    <span class="token attribute"><span class="token delimiter punctuation">#[</span><span class="token attribute-content"><span class="token attribute-class-name class-name">Size</span><span class="token punctuation">(</span><span class="token attribute-class-name class-name">min</span><span class="token punctuation">:</span> <span class="token operator">-</span><span class="token number">90</span><span class="token punctuation">,</span> <span class="token attribute-class-name class-name">max</span><span class="token punctuation">:</span> <span class="token number">90</span><span class="token punctuation">)</span></span><span class="token delimiter punctuation">]</span></span>
    <span class="token keyword">public</span> <span class="token keyword type-declaration">float</span> <span class="token variable">$lat</span><span class="token punctuation">;</span>
    
    <span class="token attribute"><span class="token delimiter punctuation">#[</span><span class="token attribute-content"><span class="token attribute-class-name class-name">Size</span><span class="token punctuation">(</span><span class="token attribute-class-name class-name">min</span><span class="token punctuation">:</span> <span class="token operator">-</span><span class="token number">180</span><span class="token punctuation">,</span> <span class="token attribute-class-name class-name">max</span><span class="token punctuation">:</span> <span class="token number">180</span><span class="token punctuation">)</span></span><span class="token delimiter punctuation">]</span></span>
    <span class="token keyword">public</span> <span class="token keyword type-declaration">float</span> <span class="token variable">$lng</span><span class="token punctuation">;</span>
    
    <span class="token keyword">protected</span> <span class="token keyword">function</span> <span class="token function-definition function">handle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword return-type">array</span>
    <span class="token punctuation">{</span>
        <span class="token comment">// write your complex logic here</span>
        <span class="token comment">// or use external repository</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token class-name static-context">Invoke</span><span class="token operator">::</span><span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
    <span class="token class-name static-context">GetPeopleNearby</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token variable">$result</span> <span class="token operator">=</span> <span class="token class-name static-context">Invoke</span><span class="token operator">::</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;getPeopleNearby&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>
    <span class="token string double-quoted-string">&quot;lat&quot;</span> <span class="token operator">=&gt;</span> <span class="token operator">-</span><span class="token number">43.32</span><span class="token punctuation">,</span>
    <span class="token string double-quoted-string">&quot;lng&quot;</span> <span class="token operator">=&gt;</span> <span class="token number">23.43</span>
<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">echo</span> <span class="token variable">$result</span><span class="token punctuation">;</span> <span class="token comment">// ...</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br></div></div><h2 id="extensions" tabindex="-1"><a class="header-anchor" href="#extensions" aria-hidden="true">#</a> Extensions</h2><h3 id="trait-extensions" tabindex="-1"><a class="header-anchor" href="#trait-extensions" aria-hidden="true">#</a> Trait extensions</h3><p>Trait extensions allow you to extend method&#39;s functionality using traits.</p><p>Example:</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token keyword">use</span> <span class="token package">Invoke<span class="token punctuation">\\</span>Attributes<span class="token punctuation">\\</span>TraitExtension</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">Invoke<span class="token punctuation">\\</span>Method</span><span class="token punctuation">;</span>

<span class="token attribute"><span class="token delimiter punctuation">#[</span><span class="token attribute-content"><span class="token attribute-class-name class-name">TraitExtension</span></span><span class="token delimiter punctuation">]</span></span>
<span class="token keyword">trait</span> <span class="token class-name-definition class-name">CanCreateBooks</span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">beforeHandleCanCreateBooks</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token comment">// do some logic here</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name-definition class-name">CreateBook</span> <span class="token keyword">extends</span> <span class="token class-name">Method</span>
<span class="token punctuation">{</span>
    <span class="token keyword">use</span> <span class="token package">CanCreateBooks</span><span class="token punctuation">;</span>
    
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">handle</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token comment">// ...</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><h4 id="hooks" tabindex="-1"><a class="header-anchor" href="#hooks" aria-hidden="true">#</a> Hooks</h4><h5 id="beforehandle-traitname" tabindex="-1"><a class="header-anchor" href="#beforehandle-traitname" aria-hidden="true">#</a> <code>beforeHandle{traitName}</code></h5><p>Called after parameters were validated and right before <code>handle</code> method is called.</p><p>Arguments:</p><p><em>None</em></p><h5 id="afterhandle-traitname" tabindex="-1"><a class="header-anchor" href="#afterhandle-traitname" aria-hidden="true">#</a> <code>afterHandle{traitName}</code></h5><p>Called right after <code>handle</code> method was called.</p><p>Arguments:</p><ul><li><code>mixed $result</code> - result of <code>handle</code></li></ul><h3 id="method-extensions" tabindex="-1"><a class="header-anchor" href="#method-extensions" aria-hidden="true">#</a> Method extensions</h3><p>Method extensions allow you to extend method&#39;s functionality via class attributes.</p><p>Example:</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token keyword">use</span> <span class="token package">Attribute</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">Closure</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">Invoke<span class="token punctuation">\\</span>MethodExtension</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">Invoke<span class="token punctuation">\\</span>Method</span><span class="token punctuation">;</span>

<span class="token attribute"><span class="token delimiter punctuation">#[</span><span class="token attribute-content"><span class="token attribute-class-name class-name">Attribute</span></span><span class="token delimiter punctuation">]</span></span>
<span class="token keyword">class</span> <span class="token class-name-definition class-name">CheckPermissions</span> <span class="token keyword">extends</span> <span class="token class-name">MethodExtension</span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword type-declaration">array</span> <span class="token variable">$permissions</span><span class="token punctuation">;</span>
    
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__construct</span><span class="token punctuation">(</span><span class="token keyword type-hint">array</span> <span class="token variable">$permissions</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">permissions</span> <span class="token operator">=</span> <span class="token variable">$permissions</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">beforeHandle</span><span class="token punctuation">(</span><span class="token class-name type-declaration">Method</span> <span class="token variable">$method</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword return-type">void</span>
    <span class="token punctuation">{</span>
        <span class="token comment">// do some logic here</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token attribute"><span class="token delimiter punctuation">#[</span><span class="token attribute-content"><span class="token attribute-class-name class-name">CheckPermissions</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;delete-user&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span></span><span class="token delimiter punctuation">]</span></span>
<span class="token keyword">class</span> <span class="token class-name-definition class-name">DeleteUser</span> <span class="token keyword">extends</span> <span class="token class-name">Method</span>
<span class="token punctuation">{</span>
    <span class="token keyword">use</span> <span class="token package">CanCreateBooks</span><span class="token punctuation">;</span>
    
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">handle</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token comment">// ...</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br></div></div><h4 id="hooks-1" tabindex="-1"><a class="header-anchor" href="#hooks-1" aria-hidden="true">#</a> Hooks</h4><h5 id="beforehandle" tabindex="-1"><a class="header-anchor" href="#beforehandle" aria-hidden="true">#</a> <code>beforeHandle</code></h5><p>Called after parameters were validated and right before <code>handle</code> method is called.</p><p>Arguments:</p><ul><li><code>Method $method</code> - method instance</li></ul><h5 id="afterhandle" tabindex="-1"><a class="header-anchor" href="#afterhandle" aria-hidden="true">#</a> <code>afterHandle</code></h5><p>Called after params validation and before handle.</p><p>Arguments:</p><ul><li><code>Method $method</code> - method instance</li><li><code>mixed $result</code> - result of <code>handle</code></li></ul>`,34);function w(v,x){const a=e("RouterLink");return p(),t(l,null,[k,d,n("ol",null,[n("li",null,[b,m,o(a,{to:"/guide/type.html"},{default:c(()=>[h]),_:1}),f]),y]),g],64)}var $=i(u,[["render",w]]);export{$ as default};
